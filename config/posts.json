{
  "posts": [
    {
      "content": "## 创建github 博客项目\n\n创建一个repo，名称为 yourname.github.io, 其中yourname是你的github名称，按照这个规则创建才有用哦，如下：\n\n![创建项目](https://upload-images.jianshu.io/upload_images/2025676-27cbc16d60b5378f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\nxxx.github.io  xxx必须是你的用户名，创建项目，我的已经存在了\n![image.png](https://upload-images.jianshu.io/upload_images/2025676-f5dc6de0a738e9d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n## [创建一个 Token](https://github.com/settings/tokens/new)\n\n只勾选repo即可，防止token泄漏\n![image.png](https://upload-images.jianshu.io/upload_images/2025676-e3424b29caa6e80c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n拿到token填写到gridea的基础配置token里\n![image.png](https://upload-images.jianshu.io/upload_images/2025676-bc682cb96eb9469c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image.png](https://upload-images.jianshu.io/upload_images/2025676-e207df0087789a85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n检测远程连接成功就可以了，如果确定都填对了，就关闭gridea软件再打开软件检测远程连接\n\n## [创建一个 OAuth](https://github.com/settings/applications/new)\n\n![image.png](https://upload-images.jianshu.io/upload_images/2025676-e341bbdab4dace89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n填写到Gridea的配置评论栏中\n![image.png](https://upload-images.jianshu.io/upload_images/2025676-8891c7ce7e2b3e5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n![image.png](https://upload-images.jianshu.io/upload_images/2025676-126a89e6e3214e35.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)",
      "data": {
        "title": "Gridea，GitHub配置使用",
        "date": "2019-09-18 18:17:55",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "grideagithub-pei-zhi-shi-yong"
    },
    {
      "content": "## 连接手机和电脑\n\n    命令行 adb devices 查看连接\n\n![连接](https://user-gold-cdn.xitu.io/2018/7/5/1646a02e0977420b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n   \n## 设置5555端口\n\n    设置wifi调试端口 5555\n    adb tcpip 5555\n\n  ![端口](https://user-gold-cdn.xitu.io/2018/7/5/1646a02e09802302?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n  \n## 查看手机ip\n\n    adb shell  ifconfig wlan0\n\n ![ip](https://user-gold-cdn.xitu.io/2018/7/5/1646a02e09607999?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n \n    手机操作，打开 设置-WLAN-配置 页面，可看到当前 IP\n\n![ip](https://user-gold-cdn.xitu.io/2018/7/5/1646a02e0bac8d18?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n## 连接手机 \n\n    adb connect <手机ip地址>\n    \n![连接](https://user-gold-cdn.xitu.io/2018/7/5/1646a02e0bb32167?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n## 成功\n    连接成功显示\n\n![成功](https://user-gold-cdn.xitu.io/2018/7/5/1646a02e5a3e35c7?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n    \n 锤子手机测试失败",
      "data": {
        "title": "adb wifi 调试",
        "date": "2019-09-18 16:48:35",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "adb-wifi-diao-shi"
    },
    {
      "content": "## 新建代码库\n```\n# 在当前目录新建一个Git代码库\n$ git init\n\n# 新建一个目录，将其初始化为Git代码库\n$ git init [project-name]\n\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n```\n\n## 配置\n```\n# 显示当前的Git配置\n$ git config --list\n\n# 编辑Git配置文件\n$ git config -e [--global]\n\n# 设置提交代码时的用户信息\n$ git config [--global] user.name \"[name]\"\n$ git config [--global] user.email \"[email address]\"\n```\n\n## 增加/删除文件\n```\n# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n# 添加当前目录的所有文件到暂存区\n$ git add .\n\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n```\n\n## 代码提交\n```\n# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n```\n\n## 分支\n```\n# 列出所有本地分支\n$ git branch\n\n# 列出所有远程分支\n$ git branch -r\n\n# 列出所有本地分支和远程分支\n$ git branch -a\n\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n\n# 切换到上一个分支\n$ git checkout -\n\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n\n# 合并指定分支到当前分支\n$ git merge [branch]\n\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n# 删除分支\n$ git branch -d [branch-name]\n\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n```\n\n## 标签\n```\n# 列出所有tag\n$ git tag\n\n# 新建一个tag在当前commit\n$ git tag [tag]\n\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n# 删除本地tag\n$ git tag -d [tag]\n\n# 删除远程tag\n$ git push origin :refs/tags/[tagName]\n\n# 查看tag信息\n$ git show [tag]\n\n# 提交指定tag\n$ git push [remote] [tag]\n\n# 提交所有tag\n$ git push [remote] --tags\n\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n```\n\n## 查看信息\n```\n# 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的代码差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat \"@{0 day ago}\"\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n\n# 从本地master拉取代码更新当前分支：branch 一般为master\n$ git rebase [branch]\n```\n\n## 远程同步\n```\n# 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n```\n\n## 撤销\n```\n# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n```\n\n## 其他\n```\n# 生成一个可供发布的压缩包\n$ git archive\n```",
      "data": {
        "title": "git命令",
        "date": "2019-09-18 16:28:33",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "git-ming-ling"
    },
    {
      "content": "[简明版教程](http://note.youdao.com/iyoudao/?p=2411)  \n[进阶版教程](http://note.youdao.com/iyoudao/?p=2445)\n## 标题  \n\n**标题，只需要在这段文字前面加上 #，再在 # 后加一个空格  \n增加一个 # ，标题字号相应降低一级**\n\n![标题](https://upload-images.jianshu.io/upload_images/2025676-8d8f001685f10376.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\n\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n```\n![标题效果](https://upload-images.jianshu.io/upload_images/2025676-58343e9277ea2b44.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 列表  \n\n### 无序列表  \n\n**你只需要在文字前面加上 - 就可以了；如果你希望是有序列表，在文字前面加上 1. 2. 3. 即可。**\n\n![无序列表](https://upload-images.jianshu.io/upload_images/2025676-07cceafd441cd920.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\n- 列表1\n  - 列表1.1\n  - 列表1.2\n- 列表2\n- 列表3\n```\n\n- 列表1\n  - 列表1.1\n  - 列表1.2\n- 列表2\n- 列表3\n\n\n### 有序列表\n\n![有序列表](https://upload-images.jianshu.io/upload_images/2025676-ebd8f26e1987f583.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\n1. 列表1\n    1. 列表1.1\n    2. 列表1.2\n2. 列表2\n3. 列表3\n```\n\n1. 列表1\n    1. 列表1.1\n    2. 列表1.2\n2. 列表2\n3. 列表3\n\n\n\n## 引用\n**如果你需要在文稿中引用一段别处的句子，那么就要用到「引用」格式。  \n在引用文字前加上 > 并与文字保留一个字符的空格**\n\n![引用](https://upload-images.jianshu.io/upload_images/2025676-308c2da04c0a7c93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\n\t> 记录，成为更好的自己。--有道云笔记 \n```\n\n> 记录，成为更好的自己。--有道云笔记 \n\n\n\n\n## 粗体和斜体\n\n**用两个 * 包含一段文本就是粗体的语法；**    \n**用一个 * 包含一段文本就是斜体的语法。**  \n***注意：字符与文本之间无须空格***\n\n![斜体](https://upload-images.jianshu.io/upload_images/2025676-8ff7819393bf126a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\n*这是斜体*\n```\n\n*这是斜体*\n\n![粗体](https://upload-images.jianshu.io/upload_images/2025676-46a4a7fa4760dbc9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\n**这是粗体**\n```\n\n**这是粗体**\n\n\n## 链接与图片\n\n**链接：在 Markdown 中，插入链接只需要使用 [显示文本] (链接地址) 即可。**  \n**图片：在 Markdown 中，插入图片只需要使用 ![显示文本] (图片链接地址)即可。**  \n***注：插入图片的语法和链接的语法很像，只是前面多了一个！***  \n\n![链接](https://upload-images.jianshu.io/upload_images/2025676-e89b224292641ac3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\n[链接](https://note.youdao.com/)\n```\n\n[链接](https://note.youdao.com/)\n\n![图片](https://upload-images.jianshu.io/upload_images/2025676-68cec4f8f6fe50e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\n![图片连接演示](https://note.youdao.com/favicon.ico)\n\n```\n\n![图片连接演示](https://note.youdao.com/favicon.ico)\n\n\n## 分割线\n\n**只需要另起一行，连续输入三个星号** ***  **即可分割两段文字内容。**\n\n```\n\t第一段\n\t***\n\t第二段\n\n\t第一段\n\t---\n\t第二段\n```\n\n第一段\n***\n第二段\n\n第一段\n---\n第二段\n\n\n\n\n## 代码高亮\n![代码高亮](https://upload-images.jianshu.io/upload_images/2025676-4567952819601eff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![代码高亮代码](https://upload-images.jianshu.io/upload_images/2025676-0637292775ce2762.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n```\n代码高亮\n```\n\n## 制作待办事项To-do List\n你只需要在待办的事项文本或者清单文本前加上- [ ]、- [x]即可。\n\n**- [] 表示未完成，- [x] 表示已完成。**\n\n***注：键入字符与字符之间都要保留一个字符的空格。***\n\n![已完成](https://upload-images.jianshu.io/upload_images/2025676-ab5840336eb854c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\n- [x] 已完成\n  - [x] 已完成\n  - [x] 已完成  \n```\n\n- [x] 已完成\n  - [x] 已完成\n  - [x] 已完成  \n\n![未完成](https://upload-images.jianshu.io/upload_images/2025676-2bf11ee3af40589a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\n- [ ] 未完成\n- [ ] 未完成\n```\n\n- [ ] 未完成\n- [ ] 未完成\n\n## 高效绘制 流程图、序列图、甘特图、表格\n### 流程图\n书写graph XX，用以确定将要绘制的流程图及其类型（XX表示流程图类型）。\n流程图分为竖向和横向两大类，竖向包括自上而下和自下而上两种顺序，横向包括从右到左和从左到右两种顺序。  \n其对应语法分别为：graph TB/graph BT/graph RL/graph LR。\n\nTB - top bottom（自上而下）  \nBT - bottom top（自下而上）  \nRL - right left（从右到左）  \nLR - left right（从左到右）  \n\n![流程图](https://upload-images.jianshu.io/upload_images/2025676-43319c747228a4b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![流程图效果](https://upload-images.jianshu.io/upload_images/2025676-7860cc705cd86a5d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n```\ngraph TD\nA[直角四边形]---B{菱形}\nB --> C((圆形))\nC --> D\nC --> E\nC -->|插入文本|F\n```\n\n### 序列图\n\n![序列图](https://upload-images.jianshu.io/upload_images/2025676-b3350d5f58325148.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![序列图效果](https://upload-images.jianshu.io/upload_images/2025676-a10ae40c580ae389.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\nsequenceDiagram\nloop every day\n    A->>B: How are you?\n\n    B->>A: Great!\nend\n```\n\n### 甘特图\n书写 gantt ，用以确定将要绘制的是甘特图。\ndateFormat YYYY-MM-DD规定了时间轴，title （标题文本）表示甘特图标题。\n需键入section，空一个字符，再输入项目名称的文本（一个section和另一个section之间要空行）。\n\n![甘特图](https://upload-images.jianshu.io/upload_images/2025676-642f5fc1f1e0a58f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![甘特图效果](https://upload-images.jianshu.io/upload_images/2025676-5a0821ca3e0c5eba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\ngantt\ndateFormat YYYY-MM-DD\ntitle 产品计划书\nsection 初期阶段\n明确需求: 2018-07-01, 9d\nsection 中期阶段\n跟进开发: 2018-07-11, 9d\nsection 后期阶段\n走查测试: 2018-07-22, 9d\n```\n\n### 表格\n\n![表格](https://upload-images.jianshu.io/upload_images/2025676-a920709eb24e62a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n```\n    header 1    | header 2    | 第三\n    ---         |---          | ---\n    row 1 col 1 | row 1 col 2 | 第三个 \n    row 2 col 1 | row 2 col 2 | 第三个\n```\n\nheader 1    | header 2    | 第三\n---         |---          | ---\nrow 1 col 1 | row 1 col 2 | 第三个 \nrow 2 col 1 | row 2 col 2 | 第三个\n\n\n## 书写数学公式\n\n![公式](https://upload-images.jianshu.io/upload_images/2025676-f3a8f9ee5bed4371.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![公式图](https://upload-images.jianshu.io/upload_images/2025676-5724b2d4632ee21a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) \n\n```math\nE = mc^2\n```\n\n\n\n",
      "data": {
        "title": "markdown编辑器教程",
        "date": "2019-08-09 17:51:21",
        "tags": [
          "Blog"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/markdown-bian-ji-qi-jiao-cheng.jpg"
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "markdown-bian-ji-qi-jiao-cheng"
    },
    {
      "content": "这是关于的页面，可以在这里向世界介绍你！\n",
      "data": {
        "title": "关于",
        "date": "2019-01-25 19:09:48",
        "tags": null,
        "published": true,
        "hideInList": true,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "about"
    },
    {
      "content": "👏  欢迎使用 **Gridea** ！  \n✍️  **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... \n\n<!-- more -->\n\n[Github](https://github.com/getgridea/gridea)  \n[Gridea 主页](http://hvenotes.fehey.com/)  \n[示例网站](http://fehey.com/)\n\n## 特性👇\n📝  你可以使用最酷的 **Markdown** 语法，进行快速创作  \n\n🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片  \n\n🏷️  你可以对文章进行标签分组  \n\n📋  你可以自定义菜单，甚至可以创建外部链接菜单  \n\n💻  你可以在 **𝖶𝗂𝗇𝖽𝗈𝗐𝗌** 或 **𝖬𝖺𝖼𝖮𝖲** 设备上使用此客户端  \n\n🌎  你可以使用 **𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌** 或 **Coding Pages** 向世界展示，未来将支持更多平台  \n\n💬  你可以进行简单的配置，接入 [Gitalk](https://github.com/gitalk/gitalk) 或 [DisqusJS](https://github.com/SukkaW/DisqusJS) 评论系统  \n\n🇬🇧  你可以使用**中文简体**或**英语**  \n\n🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力  \n\n🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步  \n\n🌱 当然 **Gridea** 还很年轻，有很多不足，但请相信，它会不停向前🏃\n\n未来，它一定会成为你离不开的伙伴\n\n尽情发挥你的才华吧！\n\n😘 Enjoy~\n",
      "data": {
        "title": "Hello Gridea",
        "date": "2018-12-12 00:00:00",
        "tags": [
          "Gridea"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/hello-gridea.png"
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "👏  欢迎使用 **Gridea** ！  \n✍️  **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... ",
      "fileName": "hello-gridea"
    }
  ],
  "tags": [
    {
      "index": -1,
      "name": "Blog",
      "slug": "wowhDkgzJ",
      "used": true
    },
    {
      "name": "Gridea",
      "slug": "ea4LAVIav",
      "used": true
    },
    {
      "name": "代码管理",
      "slug": "SbXoMJ1qwn",
      "used": false
    },
    {
      "index": -1,
      "name": "Android",
      "slug": "uPl9IEkHz",
      "used": false
    }
  ],
  "menus": [
    {
      "link": "/",
      "name": "首页",
      "openType": "Internal"
    },
    {
      "link": "/archives",
      "name": "归档",
      "openType": "Internal"
    },
    {
      "link": "/tags",
      "name": "标签",
      "openType": "Internal"
    },
    {
      "link": "/post/about",
      "name": "关于",
      "openType": "Internal"
    }
  ]
}